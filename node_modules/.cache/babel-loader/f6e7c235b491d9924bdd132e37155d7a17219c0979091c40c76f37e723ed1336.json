{"ast":null,"code":"var _jsxFileName = \"D:\\\\Backend Revision\\\\CNAPP_Dashboard\\\\src\\\\Components\\\\CSPMDashboard.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, Title);\nconst CSPMDashboard = ({\n  data,\n  togglePopup,\n  selectedWidgets\n}) => {\n  const totalValue = data.CloudAccountRikAssessment.Failed + data.CloudAccountRikAssessment.Warning + data.CloudAccountRikAssessment.NotAvailable + data.CloudAccountRikAssessment.Passed;\n  const totalConectionValue = data.CloudAccounts.Connected + data.CloudAccounts.NotConnected;\n  const doughnutData = {\n    labels: ['Failed', 'Warning', 'Not Available', 'Passed'],\n    datasets: [{\n      data: [data.CloudAccountRikAssessment.Failed, data.CloudAccountRikAssessment.Warning, data.CloudAccountRikAssessment.NotAvailable, data.CloudAccountRikAssessment.Passed],\n      backgroundColor: ['#FF6384', '#FFCE56', '#36A2EB', '#4BC0C0'],\n      hoverBackgroundColor: ['#FF6384', '#FFCE56', '#36A2EB', '#4BC0C0'],\n      borderWidth: 1\n    }]\n  };\n  const doughnutData2 = {\n    labels: ['Connected', 'Not Connected'],\n    datasets: [{\n      data: [data.CloudAccounts.Connected, data.CloudAccounts.NotConnected],\n      backgroundColor: ['#FF6384', 'grey'],\n      hoverBackgroundColor: ['#FF6384', 'grey'],\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          boxWidth: 20,\n          padding: 15\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.formattedValue}`;\n          }\n        }\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  const plugins = [{\n    id: 'text',\n    beforeDraw: function (chart) {\n      const width = chart.width;\n      const height = chart.height;\n      const ctx = chart.ctx;\n      ctx.restore();\n\n      // First Line (Total Value)\n      const fontSize1 = 1.2; // Adjusted font size\n      ctx.font = `${fontSize1}em sans-serif`;\n      ctx.textBaseline = 'middle';\n      ctx.fontWeight = 'bold'; // Make text bold\n      const totalValueText = totalValue.toString();\n      const textX = Math.round((width - ctx.measureText(totalValueText).width) / 2);\n      const textY = height / 2 - 10; // Adjusting for the first line\n      ctx.fillText(totalValueText, textX - 60, textY + 5);\n\n      // Second Line (Total)\n      const fontSize2 = 0.8; // Adjusted font size\n      ctx.font = `${fontSize2}em sans-serif`;\n      ctx.fontWeight = 'bold'; // Make text bold\n      const label = \"Total\";\n      const labelX = Math.round((width - ctx.measureText(label).width) / 2);\n      const labelY = height / 2 + 15;\n      ctx.fillText(label, labelX - 60, labelY - 4);\n      ctx.save();\n    }\n  }];\n  const options1 = {\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          boxWidth: 20,\n          padding: 15\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.formattedValue}`;\n          }\n        }\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  const plugins1 = [{\n    id: 'text',\n    beforeDraw: function (chart) {\n      const width = chart.width;\n      const height = chart.height;\n      const ctx = chart.ctx;\n      ctx.restore();\n\n      // First Line (Total Value)\n      const fontSize1 = 1.2; // Adjusted font size\n      ctx.font = `${fontSize1}em sans-serif`;\n      ctx.textBaseline = 'middle';\n      ctx.fontWeight = 'bold'; // Make text bold\n      const totalValueText = totalConectionValue.toString();\n      const textX = Math.round((width - ctx.measureText(totalValueText).width) / 2);\n      const textY = height / 2 - 10; // Adjusting for the first line\n      ctx.fillText(totalValueText, textX - 65, textY + 5);\n\n      // Second Line (Total)\n      const fontSize2 = 0.8; // Adjusted font size\n      ctx.font = `${fontSize2}em sans-serif`;\n      ctx.fontWeight = 'bold'; // Make text bold\n      const label = \"Total\";\n      const labelX = Math.round((width - ctx.measureText(label).width) / 2);\n      const labelY = height / 2 + 15;\n      ctx.fillText(label, labelX - 65, labelY - 4);\n      ctx.save();\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cspmdashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cspmtitle\",\n      children: \"CSPM Executive Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row cspmcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), selectedWidgets.CloudAccounts && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doughnut-chart-container card_insideDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chartTitle\",\n            children: \"Cloud Acounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            className: \"Dchart\",\n            data: doughnutData2,\n            options: options1,\n            plugins: plugins1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 43\n      }, this), selectedWidgets.CloudAccountRiskAssessment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doughnut-chart-container card_insideDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chartTitle\",\n            children: \"Cloud Acount Risk Assessment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            className: \"Dchart\",\n            data: doughnutData,\n            options: options,\n            plugins: plugins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"addWidget\",\n          onClick: togglePopup,\n          children: \"Add widget +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_c = CSPMDashboard;\nexport default CSPMDashboard;\nvar _c;\n$RefreshReg$(_c, \"CSPMDashboard\");","map":{"version":3,"names":["React","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","Title","jsxDEV","_jsxDEV","register","CSPMDashboard","data","togglePopup","selectedWidgets","totalValue","CloudAccountRikAssessment","Failed","Warning","NotAvailable","Passed","totalConectionValue","CloudAccounts","Connected","NotConnected","doughnutData","labels","datasets","backgroundColor","hoverBackgroundColor","borderWidth","doughnutData2","options","plugins","legend","position","boxWidth","padding","tooltip","callbacks","label","tooltipItem","formattedValue","responsive","maintainAspectRatio","id","beforeDraw","chart","width","height","ctx","restore","fontSize1","font","textBaseline","fontWeight","totalValueText","toString","textX","Math","round","measureText","textY","fillText","fontSize2","labelX","labelY","save","options1","plugins1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","CloudAccountRiskAssessment","onClick","_c","$RefreshReg$"],"sources":["D:/Backend Revision/CNAPP_Dashboard/src/Components/CSPMDashboard.js"],"sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, Title);\r\n\r\nconst CSPMDashboard = ({data, togglePopup, selectedWidgets}) => {\r\n\r\nconst totalValue = data.CloudAccountRikAssessment.Failed + data.CloudAccountRikAssessment.Warning + data.CloudAccountRikAssessment.NotAvailable + data.CloudAccountRikAssessment.Passed;\r\nconst totalConectionValue = data.CloudAccounts.Connected + data.CloudAccounts.NotConnected;\r\n\r\n  const doughnutData = {\r\n    labels: ['Failed', 'Warning', 'Not Available', 'Passed'],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          data.CloudAccountRikAssessment.Failed,\r\n          data.CloudAccountRikAssessment.Warning,\r\n          data.CloudAccountRikAssessment.NotAvailable,\r\n          data.CloudAccountRikAssessment.Passed,\r\n        ],\r\n        backgroundColor: ['#FF6384', '#FFCE56', '#36A2EB', '#4BC0C0'],\r\n        hoverBackgroundColor: ['#FF6384', '#FFCE56', '#36A2EB', '#4BC0C0'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const doughnutData2 = {\r\n    labels: ['Connected', 'Not Connected'],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          data.CloudAccounts.Connected,\r\n          data.CloudAccounts.NotConnected,\r\n        ],\r\n        backgroundColor: ['#FF6384', 'grey'],\r\n        hoverBackgroundColor: ['#FF6384', 'grey'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        position: 'right', \r\n        labels: {\r\n          boxWidth: 20, \r\n          padding: 15, \r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem) {\r\n            return `${tooltipItem.label}: ${tooltipItem.formattedValue}`;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const plugins = [{\r\n    id: 'text',\r\n    beforeDraw: function(chart) {\r\n      const width = chart.width;\r\n      const height = chart.height;\r\n      const ctx = chart.ctx;\r\n      ctx.restore();\r\n      \r\n      // First Line (Total Value)\r\n      const fontSize1 = 1.2; // Adjusted font size\r\n      ctx.font = `${fontSize1}em sans-serif`;\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fontWeight = 'bold'; // Make text bold\r\n      const totalValueText = totalValue.toString();\r\n      const textX = Math.round((width - ctx.measureText(totalValueText).width) / 2);\r\n      const textY = height / 2 - 10; // Adjusting for the first line\r\n      ctx.fillText(totalValueText, textX-60, textY+5);\r\n  \r\n      // Second Line (Total)\r\n      const fontSize2 = 0.8; // Adjusted font size\r\n      ctx.font = `${fontSize2}em sans-serif`;\r\n      ctx.fontWeight = 'bold'; // Make text bold\r\n      const label = \"Total\";\r\n      const labelX = Math.round((width - ctx.measureText(label).width) / 2);\r\n      const labelY = height / 2 + 15; \r\n      ctx.fillText(label, labelX -60, labelY-4);\r\n      \r\n      ctx.save();\r\n    }\r\n  }];\r\n\r\n\r\n\r\n  const options1 = {\r\n    plugins: {\r\n      legend: {\r\n        position: 'right', \r\n        labels: {\r\n          boxWidth: 20, \r\n          padding: 15, \r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem) {\r\n            return `${tooltipItem.label}: ${tooltipItem.formattedValue}`;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const plugins1 = [{\r\n    id: 'text',\r\n    beforeDraw: function(chart) {\r\n      const width = chart.width;\r\n      const height = chart.height;\r\n      const ctx = chart.ctx;\r\n      ctx.restore();\r\n      \r\n      // First Line (Total Value)\r\n      const fontSize1 = 1.2; // Adjusted font size\r\n      ctx.font = `${fontSize1}em sans-serif`;\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fontWeight = 'bold'; // Make text bold\r\n      const totalValueText = totalConectionValue.toString();\r\n      const textX = Math.round((width - ctx.measureText(totalValueText).width) / 2);\r\n      const textY = height / 2 - 10; // Adjusting for the first line\r\n      ctx.fillText(totalValueText, textX-65, textY+5);\r\n  \r\n      // Second Line (Total)\r\n      const fontSize2 = 0.8; // Adjusted font size\r\n      ctx.font = `${fontSize2}em sans-serif`;\r\n      ctx.fontWeight = 'bold'; // Make text bold\r\n      const label = \"Total\";\r\n      const labelX = Math.round((width - ctx.measureText(label).width) / 2);\r\n      const labelY = height / 2 + 15; \r\n      ctx.fillText(label, labelX -65, labelY-4);\r\n      \r\n      ctx.save();\r\n    }\r\n  }];\r\n\r\n\r\n  return (\r\n    <div className='cspmdashboard'>\r\n      <p className='cspmtitle'>CSPM Executive Dashboard</p>\r\n      <div className='flex-row cspmcontainer'>\r\n        <div></div>\r\n        {selectedWidgets.CloudAccounts && <div className='card'>\r\n            <div className='doughnut-chart-container card_insideDiv'>\r\n                <p className='chartTitle'>Cloud Acounts</p>\r\n                <Doughnut className='Dchart' data={doughnutData2} options={options1} plugins={plugins1} />\r\n            </div>\r\n        </div>}\r\n        {selectedWidgets.CloudAccountRiskAssessment && <div className='card'>\r\n            <div className='doughnut-chart-container card_insideDiv'>\r\n                <p className='chartTitle'>Cloud Acount Risk Assessment</p>\r\n                <Doughnut className='Dchart' data={doughnutData} options={options} plugins={plugins} />\r\n            </div>\r\n        </div>}\r\n        <div>\r\n          <p className='addWidget' onClick={togglePopup}>Add widget +</p>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CSPMDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}